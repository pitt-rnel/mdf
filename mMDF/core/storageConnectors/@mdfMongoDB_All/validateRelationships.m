function [res, ed] = validateRelationships(obj)
    % function [res, ed] = obj.validateRelationships()
    %
    % check the data collection for broken links
    % Output
    % - res : (boolean) True if all the relationships are valid, false otherwise
    % - ed  : (struct) structure with all the information about the broken links
    %    parentChild
    %      missingChildObject    : the child object is missing
    %      missingParentObject   : the parent object is missing
    %      missingChildParentRef : the child object is missing the reference to the parent object  
    %      missingParentChildRef : the parent object is missing the reference to the child object  
    %    bidirectional
    %      missingDestObject     : the destination object is missing
    %      missingDestSourceRef  : the destination object is missing the reference to the source object
    %    unidirectional
    %      missingDestObject     : the destination object is missing
    %

    % -----------------------
    % Parent child relationship
    %
    % check if all the children are accounted for
    % parent -> child
    pipeline = { ...
     '{ $project : { "_id" : 0, "mdf_uuid" : "$mdf_def.mdf_uuid", "mdf_type" : "$mdf_def.mdf_type", "mdf_links" : { $objectToArray : "$mdf_def.mdf_children" } } }', ...
     '{ $unwind : "$mdf_links" }', ...
     '{ $match : { $and : [ { "mdf_links.k" : { $ne: "mdf_fields" } }, { "mdf_links.k" : { $ne: "mdf_types" } } ] } }', ...
     '{ $project : { "mdf_uuid" : "$mdf_uuid", "mdf_type" : "$mdf_type", "mdf_link_field" : "$mdf_links.k", "mdf_link_values" : "$mdf_links.v" } }', ...
     '{ $unwind : "$mdf_link_values" },i', ... 
     '{ $project : { "mdf_p_uuid" : "$mdf_uuid", "mdf_p_type" : "$mdf_type", "mdf_p_prop" : "$mdf_link_field", "mdf_c_uuid" : "$mdf_link_values.mdf_uuid", "mdf_c_type" : "$mdf_link_values.mdf_type" } }', ...
     '{ $lookup : { from: "mdfDbTest", let: { child_uuid: "$mdf_c_uuid", child_type: "$mdf_c_type" }, pipeline: [ { $match : { $expr : { $and: [ { $eq: [ "$mdf_def.mdf_uuid", "$$child_uuid" ] }, { $eq: [ "$mdf_def.mdf_type", "$$child_type" ] } ] } } } ], as: "children" } }', ...
     '{ $match : { "children" : { $size : 0 } }}', ...
     '{ $project : { "_id" : 0, "parent_uuid" : "$mdf_p_uuid", "parent_type" : "$mdf_p_type", "parent_prop" : "$mdf_p_prop", "child_uuid" : "$mdf_c_uuid", "child_type" : "$mdf_c_type" }}' };
    pcMco = obj.aggregate(pipeline);

    % 
    % check if all the parents are accounted for
    % child -> parent
    pipeline = { ...
     '{ $project : { "_id" : 0, "mdf_uuid" : "$mdf_def.mdf_uuid", "mdf_type" : "$mdf_def.mdf_type", "mdf_parent" : "$mdf_def.mdf_parents" } }', ...
     '{ $unwind : "$mdf_parent" }', ...
     '{ $project : { "mdf_c_uuid" : "$mdf_uuid", "mdf_c_type" : "$mdf_type", "mdf_c_prop" : "parent", "mdf_p_uuid" : "$mdf_parent.mdf_uuid", "mdf_p_type" : "$mdf_parent.mdf_type" } }', ...
     '{ $lookup : { from: "mdfDbTest", let: { parent_uuid: "$mdf_p_uuid", parent_type: "$mdf_p_type" }, pipeline: [ { $match : { $expr : { $and: [ { $eq: [ "$mdf_def.mdf_uuid", "$$parent_uuid" ] }, { $eq: [ "$mdf_def.mdf_type", "$$parent_type" ] } ] } } } ], as: "parent" } }', ...
     '{ $match : { "parent" : { $size : 0 } } }', ...
     '{ $project : { "_id" : 0, "child_uuid" : "$mdf_c_uuid", "child_type" : "$mdf_c_type", "child_prop" : "$mdf_c_prop", "parent_uuid" : "$mdf_p_uuid", "parent_type" : "$mdf_p_type" }}' };
    pcMpo = obj.aggregate(pipeline);

    %
    % check if children have the reference back to the parent
    % parent -> child -> parent
    pipeline = { ...
     '{ $project : { "_id" : 0, "mdf_uuid" : "$mdf_def.mdf_uuid", "mdf_type" : "$mdf_def.mdf_type", "mdf_children" : { $objectToArray : "$mdf_def.mdf_children" } } }', ...
     '{ $unwind : "$mdf_children" }', ...
     '{ $match : { $and : [ { "mdf_children.k" : { $ne: "mdf_fields" } }, { "mdf_children.k" : { $ne: "mdf_types" } } ] } }', ...
     '{ $project : { "mdf_uuid" : "$mdf_uuid", "mdf_type" : "$mdf_type", "mdf_child_field" : "$mdf_children.k", "mdf_child_values" : "$mdf_children.v" } }', ...
     '{ $unwind : "$mdf_child_values" }', ...
     '{ $group : { "_id" : { "mdf_p1_uuid" : "$mdf_uuid", "mdf_p1_type" : "$mdf_type", "mdf_p1_field" : "$mdf_child_field", "mdf_c1_uuid" : "$mdf_child_values.mdf_uuid", "mdf_c1_type" : "$mdf_child_values.mdf_type" } } }', ...
     '{ $project : { "_id" : 0, "mdf_p1_uuid" : "$_id.mdf_p1_uuid", "mdf_p1_type" : "$_id.mdf_p1_type", "mdf_p1_field" : "$_id.mdf_p1_field", "mdf_c1_uuid" : "$_id.mdf_c1_uuid", "mdf_c1_type" : "$_id.mdf_c1_type" } }' , ...
     [ '{ $lookup : {' ...
       'from : "mdfDbTest",' ...
       'let: {  c_uuid : "$mdf_c1_uuid", c_type : "$mdf_c1_type"},' ...
       'pipeline: [' ...
        '{ $match: { $expr: { $and: [ { $eq: [ "$mdf_def.mdf_uuid",  "$$c_uuid" ] }, { $eq: [ "$mdf_def.mdf_type",  "$$c_type" ] } ] } } },' ...
        '{ $project: { "mdf_c2_uuid" : "$mdf_def.mdf_uuid", "mdf_c2_type" : "$mdf_def.mdf_type"} } ],' ...
       'as: "child" } }' ] , ...
     '{ $match : { "child" : { $not: { $size : 0 } } } }', ...
     '{ $project : { "mdf_p1_uuid" : 1, "mdf_p1_type" : 1, "mdf_p1_field" : 1, "mdf_c1_uuid" : 1, "mdf_c1_type" : 1 } }' , ...
     [ '{ $lookup : { ' ...
        'from : "mdfDbTest", ' ...
        'let: { c_uuid : "$mdf_c1_uuid", c_type : "$mdf_c1_type", p_uuid : "$mdf_p1_uuid", p_type : "$mdf_p1_type" }, ' ...
        'pipeline: [' ...
         '{ $match: { $expr: { $and: [ { $eq: [ "$mdf_def.mdf_uuid",  "$$c_uuid" ] }, { $eq: [ "$mdf_def.mdf_type",  "$$c_type" ] } ] } } }, ' ...
         '{ $unwind: "$mdf_def.mdf_parents" }, ' ...
         '{ $match: { $expr: { $and: [ { $eq: [ "$mdf_def.mdf_parents.mdf_uuid",  "$$p_uuid" ] }, { $eq: [ "$mdf_def.mdf_parents.mdf_type",  "$$p_type" ] } ] } } }, ' ...
         '{ $project: { "mdf_c2_uuid" : "$mdf_def.mdf_uuid", "mdf_c2_type" : "$mdf_def.mdf_type", "mdf_p2_uuid" : "$mdf_def.mdf_parents.mdf_uuid", "mdf_p2_type" : "$mdf_def.mdf_parents.mdf_type"}} ],' ...
        'as: "child" }}' ], ...
     '{ $match : { "child" : { $size : 0 } }}', ...
     '{ $project: { "parent_uuid" : "$mdf_p1_uuid", "parent_type" : "$mdf_p1_type", "parent_child_property" : "$mdf_p1_field", "child_uuid" : "$mdf_c1_uuid", "child_type" : "$mdf_c1_type"} }' };
    pcMcpr = obj.aggregate(pipeline);
   
    %
    % check if parents have the reference back to the child
    % child -> parent -> child
    pipeline = { ...
     '{ $project : { "_id" : 0, "mdf_uuid" : "$mdf_def.mdf_uuid", "mdf_type" : "$mdf_def.mdf_type", "mdf_parent" : "$mdf_def.mdf_parents" } }', ...
     '{ $unwind : "$mdf_parent" }', ...
     '{ $project : { "mdf_c1_uuid" : "$mdf_uuid", "mdf_c1_type" : "$mdf_type", "mdf_p1_uuid" : "$mdf_parent.mdf_uuid", "mdf_p1_type" : "$mdf_parent.mdf_type" } }', ...
     [ '{ $lookup : { ' ...
        'from: "mdfDbTest", ' ...
        'let: { p_uuid: "$mdf_p1_uuid", p_type: "$mdf_p1_type" },' ...
        'pipeline: [ ' ... 
         '{ $match : { $expr : { $and: [ { $eq: [ "$mdf_def.mdf_uuid", "$$p_uuid" ] }, { $eq: [ "$mdf_def.mdf_type", "$$p_type" ] } ] } } }, ' ...
         '{ $project: { "mdf_p2_uuid" : "$mdf_def.mdf_uuid" } } ],' ...
         'as: "parent" } }' ], ...
     '{ $match : { "parent" : { $not : { $size : 0 } } }}', ...
     '{ $group: { "_id" : { "mdf_c1_uuid": "$mdf_c1_uuid", "mdf_c1_type": "$mdf_c1_type", "mdf_p1_uuid": "$mdf_p1_uuid", "mdf_p1_type": "$mdf_p1_type" }}}', ...
     '{ $project: { "_id": 0, "mdf_c1_uuid": "$_id.mdf_c1_uuid", "mdf_c1_type": "$_id.mdf_c1_type", "mdf_p1_uuid": "$_id.mdf_p1_uuid", "mdf_p1_type": "$_id.mdf_p1_type" }}', ...
     ['{ $lookup : {' ...
       'from: "mdfDbTest",' ...
       'let: { c_uuid : "$mdf_c1_uuid", c_type : "$mdf_c1_type", p_uuid : "$mdf_p1_uuid", p_type : "$mdf_p1_type" },' ...
       'pipeline: [ ' ... 
        '{ $match : { $expr : { $and: [ { $eq: [ "$mdf_def.mdf_uuid", "$$p_uuid" ] }, { $eq: [ "$mdf_def.mdf_type", "$$p_type" ] } ] } } },' ...
        '{ $project : { "_id" : 0, "mdf_p2_uuid" : "$mdf_def.mdf_uuid", "mdf_p2_type" : "$mdf_def.mdf_type", "mdf_children" : { $objectToArray : "$mdf_def.mdf_children" } } },' ...
        '{ $unwind : "$mdf_children" },' ...
        '{ $match : { $and : [ { "mdf_children.k" : { $ne: "mdf_fields" } }, { "mdf_children.k" : { $ne: "mdf_types" } } ] } },' ...
        '{ $unwind: "$mdf_children.v"},' ...
        '{ $project : { "mdf_p2_uuid" : "$mdf_p2_uuid", "mdf_p2_type" : "$mdf_p2_type", "mdf_p2_prop" : "$mdf_children.k", "mdf_c2_uuid" : "$mdf_children.v.mdf_uuid", "mdf_c2_type" : "$mdf_children.v.mdf_type"} }, ' ...
        '{ $match : { $expr : { $and: [ { $eq: [ "$mdf_c2_uuid", "$$c_uuid" ] }, { $eq: [ "$mdf_c2_type", "$$c_type" ] } ] } } } ], ' ...
       'as: "parent" }}' ], ...
      '{ $match : { "parent" : { $size : 0 } } }', ...
      '{ $project : { "_id" : 0, "child_uuid" : "$mdf_c1_uuid", "child_type" : "$mdf_c1_type", "parent_uuid" : "$mdf_p1_uuid", "parent_type" : "$mdf_p1_type" }}' };
    pcMpcr = obj.aggregate(pipeline);

    % -----------------------
    % Bidirectional relationship
    %
    % check if all the destination objects are accounted for
    % source -> destination
    pipeline = { ...
     '{ $project : { "_id" : 0, "mdf_uuid" : "$mdf_def.mdf_uuid","mdf_type" : "$mdf_def.mdf_type", "mdf_links" : { $objectToArray : "$mdf_def.mdf_links" } } }', ...
     '{ $unwind : "$mdf_links" }', ...
     '{ $match : { $and : [ { "mdf_links.k" : { $ne: "mdf_fields" } }, { "mdf_links.k" : { $ne: "mdf_types" } }, { "mdf_links.k" : { $ne: "mdf_directions" } } ] } }', ...
     '{ $project : { "mdf_uuid" : "$mdf_uuid", "mdf_type" : "$mdf_type", "mdf_link_field" : "$mdf_links.k", "mdf_link_values" : "$mdf_links.v" } }', ...
     '{ $unwind : "$mdf_link_values" }', ...
     ['{ $project : { "mdf_s1_uuid" : "$mdf_uuid", "mdf_s1_type" : "$mdf_type", "mdf_s1_prop" : "$mdf_link_field", ' ...
       '"mdf_d1_uuid" : "$mdf_link_values.mdf_uuid", "mdf_d1_type" : "$mdf_link_values.mdf_type", "mdf_d1_dir" : "$mdf_link_values.mdf_direction" } }'], ...
     '{ $match : { "mdf_d1_dir" : { $eq: "b" } } }', ...
     ['{ $lookup : { ' ...
       'from: "mdfDbTest",' ...
       'let: { dest_uuid: "$mdf_d1_uuid", dest_type: "$mdf_d1_type" },' ...
       'pipeline: [ { $match : { $expr : { $and : [ { $eq: [ "$mdf_def.mdf_uuid", "$$dest_uuid" ] }, { $eq: [ "$mdf_def.mdf_type", "$$dest_type" ] } ] } } } ],' ...
       'as: "destination"  } }'], ...
     '{ $match : { "destination" : { $size : 0 } } }', ...
     '{ $project : { "_id" : 0, "source_uuid" : "$mdf_s1_uuid", "source_type" : "$mdf_s1_type", "source_prop" : "$mdf_s1_prop", "dest_uuid" : "$mdf_d1_uuid", "dest_type" : "$mdf_d1_type" }}' };
    blMdo = obj.aggregate(pipeline);

    %
    % check if the destination objects have the reference back to the source one
    % source -> destination -> source
    pipeline = { ...
     '{ $project : { "_id" : 0 , "mdf_uuid" : "$mdf_def.mdf_uuid", "mdf_type" : "$mdf_def.mdf_type", "mdf_links" : { $objectToArray : "$mdf_def.mdf_links" } } }', ...
     '{ $unwind : "$mdf_links" }', ...
     '{ $match : { $and : [ { "mdf_links.k" : { $ne: "mdf_fields" } }, { "mdf_links.k" : { $ne: "mdf_types" } }, { "mdf_links.k" : { $ne: "mdf_directions" } } ] } }', ...
     '{ $project : { "mdf_uuid" : "$mdf_uuid", "mdf_type" : "$mdf_type", "mdf_link_field" : "$mdf_links.k", "mdf_link_values" : "$mdf_links.v" } }', ...
     '{ $unwind : "$mdf_link_values" }', ...
     '{ $project : { "mdf_s1_uuid" : "$mdf_uuid", "mdf_s1_type" : "$mdf_type", "mdf_s1_prop" : "$mdf_link_field", "mdf_d1_uuid" : "$mdf_link_values.mdf_uuid", "mdf_d1_type" : "$mdf_link_values.mdf_type", "mdf_d1_dir" : "$mdf_link_values.mdf_direction" } }', ...
     '{ $match : { "mdf_d1_dir" : { $eq: "b" } } }', ...
     ['{ $lookup : {' ...
       'from : "mdfDbTest",' ...
       'let: { d_uuid : "$mdf_d1_uuid", d_type : "$mdf_d1_type"},' ...
       'pipeline: [ ' ...
        '{ $match: { $expr: { $and: [ { $eq: [ "$mdf_def.mdf_uuid",  "$$d_uuid" ] }, { $eq: [ "$mdf_def.mdf_type",  "$$d_type" ] } ] } } },' ...
        '{ $project: { "mdf_d2_uuid" : "$mdf_def.mdf_uuid", "mdf_d2_type" : "$mdf_def.mdf_type"} } ],' ...
       'as: "destination" } }'], ...
     '{ $match : { "destination" : { $not: { $size : 0 } } } }', ...
     '{ $project : { "mdf_s1_uuid" : 1, "mdf_s1_type" : 1, "mdf_s1_prop" : 1, "mdf_d1_uuid" : 1, "mdf_d1_type" : 1 } }', ...
     ['{ $lookup : {' ...
       'from: "mdfDbTest",' ...
       'let: { s_uuid : "$mdf_s1_uuid", s_type : "$mdf_s1_type", d_uuid : "$mdf_d1_uuid", d_type : "$mdf_d1_type" },' ...
       'pipeline: [' ...
        '{ $match : { $expr : { $and: [ { $eq: [ "$mdf_def.mdf_uuid", "$$d_uuid" ] }, { $eq: [ "$mdf_def.mdf_type", "$$d_type" ] } ] } } },' ...
        '{ $project : { "_id" : 0, "mdf_d2_uuid" : "$mdf_def.mdf_uuid", "mdf_d2_type" : "$mdf_def.mdf_type", "mdf_d2_links" : { $objectToArray : "$mdf_def.mdf_links" } } },' ...
        '{ $unwind : "$mdf_d2_links" },' ...
        '{ $match : { $and : [ { "mdf_d2_links.k" : { $ne: "mdf_fields" } }, { "mdf_d2_links.k" : { $ne: "mdf_types" } }, { "mdf_d2_links.k" : { $ne: "mdf_directions" } } ] } },' ...
        '{ $unwind: "$mdf_d2_links.v"},' ...
        '{ $project : { "mdf_s2_uuid" : "$mdf_d2_uuid", "mdf_s2_type" : "$mdf_d2_type", "mdf_s2_prop" : "$mdf_d2_links.k", "mdf_d2_uuid" : "$mdf_d2_links.v.mdf_uuid", "mdf_d2_type" : "$mdf_d2_links.v.mdf_type", "mdf_d2_dir"  : "$mdf_d2_links.v.mdf_direction" } },' ...
        '{ $match : { $expr : { $and: [ { $eq: [ "$mdf_d2_uuid", "$$s_uuid" ] }, { $eq: [ "$mdf_d2_type", "$$s_type" ] }, { $eq: [ "$mdf_d2_dir", "b" ] } ] } } } ]' ...
       'as: "back-reference" }}'], ...
      '{ $match : { "back-reference" : { $size : 0 } } }', ...
      '{ $project : { "_id" : 0, "source_uuid" : "$mdf_s1_uuid", "source_type" : "$mdf_s1_type", "source_prop" : "$mdf_s1_prop", "dest_uuid" : "$mdf_d1_uuid", "dest_type" : "$mdf_d1_type" }}' };
    blMdsr = obj.aggregate(pipeline);

    % -----------------------
    % Unidirectionl links
    %
    % check if any desstination objecy is missing
    % source -> dest
    pipeline = {
     '{ $project : { "_id" : 0, "mdf_uuid" : "$mdf_def.mdf_uuid","mdf_type" : "$mdf_def.mdf_type", "mdf_links" : { $objectToArray : "$mdf_def.mdf_links" } } }', ...
     '{ $unwind : "$mdf_links" }', ...
     '{ $match : { $and : [ { "mdf_links.k" : { $ne: "mdf_fields" } }, { "mdf_links.k" : { $ne: "mdf_types" } }, { "mdf_links.k" : { $ne: "mdf_directions" } } ] } }', ...
     '{ $project : { "mdf_uuid" : "$mdf_uuid", "mdf_type" : "$mdf_type", "mdf_link_field" : "$mdf_links.k", "mdf_link_values" : "$mdf_links.v" } }', ...
     '{ $unwind : "$mdf_link_values" }', ...
     ['{ $project : { "mdf_s1_uuid" : "$mdf_uuid", "mdf_s1_type" : "$mdf_type", "mdf_s1_prop" : "$mdf_link_field", ' ...
       '"mdf_d1_uuid" : "$mdf_link_values.mdf_uuid", "mdf_d1_type" : "$mdf_link_values.mdf_type", "mdf_d1_dir" : "$mdf_link_values.mdf_direction" } }'], ...
     '{ $match : { "mdf_d1_dir" : { $eq: "u" } } }', ...
     ['{ $lookup : { ' ...
       'from: "mdfDbTest",' ...
       'let: { dest_uuid: "$mdf_d1_uuid", dest_type: "$mdf_d1_type" },' ...
       'pipeline: [ { $match : { $expr : { $and : [ { $eq: [ "$mdf_def.mdf_uuid", "$$dest_uuid" ] }, { $eq: [ "$mdf_def.mdf_type", "$$dest_type" ] } ] } } } ],' ...
       'as: "destination"  } }'], ...
     '{ $match : { "destination" : { $size : 0 } } }', ...
     '{ $project : { "_id" : 0, "source_uuid" : "$mdf_s1_uuid", "source_type" : "$mdf_s1_type", "source_prop" : "$mdf_s1_prop", "dest_uuid" : "$mdf_d1_uuid", "dest_type" : "$mdf_d1_type" }}' };
    ulMdo = obj.aggregate(pipeline);

    
    %
    % prepare results
    res = ~( ...
	    length(pcMco) > 0 && ...
        length(pcMpo) > 0 && ...
        length(pcMcpr) > 0 && ...
        length(pcMpcr) > 0 && ...
        length(blMdo) > 0 && ...
        length(blMdsr) > 0 && ...
        length(ulMdo) );

    if nargout > 1
        ed = struct( ...
            'parentChild', struct(), ...
            'bidirectional' , struct(), ...
            'unidirectional' , struct());
        ed.parentChild.missingChildObject = pcMco;
        ed.parentChild.missingParentObject = pcMpo;
        ed.parentChild.missingChildParentRef = pcMcpr;
        ed.parentChild.missingParentChildRef = pcMpcr;
        ed.bidirectional.missingDestObject = blMdo;
        ed.bidirectional.missingDestSourceRef = blMdsr;
        ed.unidirectional.missingDestObject = ulMdo;

    end %if

end %function
